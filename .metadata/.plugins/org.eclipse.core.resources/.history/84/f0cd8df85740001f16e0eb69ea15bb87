/*
 * fzd_stpmic1.c
 *
 *  Created on: Jul 10, 2024
 *      Author: faruk
 */


#include "fzd_stpmic1.h"

int32_t stpmic_i2c_dev;

void initialize_stpmic(void)
{
	const char file_name[] = "/dev/i2c-2";
	int file;

	if ((file = open(file_name,O_RDWR))<0)
	{
		printf("Failed i2c bus \r\n");
		exit(1);
	}
	if (ioctl(file,I2C_SLAVE,STPMIC_DEVICE_ADDRESS) < 0)
	{
		printf("Failed to acquire bus access or talk to device\r\n");
		exit(1);
	}
	else
	{
		stpmic_i2c_dev = dup(file);
		close(file);
	}
}



uint16_t stpmic_read(uint8_t reg_addr,uint16_t *value,uint8_t size)
{
	uint8_t buf[2] = {0};
	;
	if(write(stpmic_i2c_dev, &reg_addr, 1) < 1)
	{
		printf("Failed to acquire bus access or talk to device\r\n");
		exit(1);
	}
	if(read(stpmic_i2c_dev, buf, size) < 0)
	{
		printf("Failed to acquire bus access or talk to device\r\n");
		exit(1);
	}
	return buf;
}


/*
 * @brief read_stpmicVersion
 *
 * @param reg_add
 *
 * @return buf
 * */
uint16_t read_stpmicVersion(void)
{
	uint16_t buf = 0;

	stpmic_read(STPMIC_VERSION_REGISTER, buf, 1);
	return buf;
}
