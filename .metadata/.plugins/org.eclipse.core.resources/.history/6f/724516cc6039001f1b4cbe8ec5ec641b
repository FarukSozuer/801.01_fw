/**
 ******************************************************************************
  * @file		: ZED_spi.c
  * @brief		: Task scheduler source file
  *				  This file contains task structure of the application
  * @author		: Faruk Sozuer
  * @date		: 10.04.2024
  * @version	: 0.0.1
 ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2024 ZED TECH, All Rights Reserved </center></h2>
  *
  * All information contained herein is, and remains the property of ZED TECH. The
  * intellectual and technical concepts contained herein are proprietary to ZED TECH
  * and are protected by trade secret or copyright law. Dissemination of this
  * information or reproduction of this material is strictly forbidden unless
  * prior written permission is obtained from ZED TECH.  Access to the source code
  * contained herein is hereby forbidden to anyone except current ZED TECH employees,
  * managers or contractors who have executed Confidentiality and Non-disclosure
  * agreements explicitly covering such access.
  *
 ******************************************************************************
  */


#include "zed_iio.h"

int32_t init_iio_device(const char* device_name, struct iio_device** device)
{
    if ((!device_name))
        return -1;

    struct iio_context* ctx = iio_create_default_context();
    if (!ctx)
        return -1;

    *device = iio_context_find_device(ctx, device_name);
    if (!device)
        return -1;

    return 0;
}

int32_t init_iio_device_channels(const struct iio_device* device,
                                       const iio_channel_configs_t* channel_config,
                                       struct iio_channel** channel,
                                       const size_t num_of_channel)
{
    if ((!device) || (num_of_channel < 1))
        return -1;

    if (iio_device_get_channels_count(device) != num_of_channel)
        return -1;

    for (size_t idx = 0; idx < num_of_channel; ++idx)
    {
        channel[idx] = iio_device_find_channel(device,
                                               channel_config[idx].name,
                                               channel_config[idx].dir);
    }

    return 0;
}
