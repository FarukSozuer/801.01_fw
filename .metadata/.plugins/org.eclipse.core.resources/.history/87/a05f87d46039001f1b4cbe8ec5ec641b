/**
 ******************************************************************************
  * @file		: ZED_rflink.h
  * @brief		: Task scheduler source file
  *				  This file contains task structure of the application
  * @author		: Faruk Sozuer
  * @date		: 20.04.2024
  * @version	: 0.0.1
 ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2024 ZED TECH, All Rights Reserved </center></h2>
  *
  * All information contained herein is, and remains the property of ZED TECH. The
  * intellectual and technical concepts contained herein are proprietary to ZED TECH
  * and are protected by trade secret or copyright law. Dissemination of this
  * information or reproduction of this material is strictly forbidden unless
  * prior written permission is obtained from ZED TECH.  Access to the source code
  * contained herein is hereby forbidden to anyone except current ZED TECH employees,
  * managers or contractors who have executed Confidentiality and Non-disclosure
  * agreements explicitly covering such access.
  *
 ******************************************************************************
  */

#include "zed_common_def.h"
#include "zed_cpu_info.h"
#include "zed_uart.h"
#include "zed_xadc.h"

uint64_t bw_freq = 24000000;

ad9361_rx_channel_val_type ad9361_rx_channel_val;
ad9361_tx_channel_val_type ad9361_tx_channel_val;

int64_t temp;



/*
 * @brief
 *
 * @param
 *
 * @return
 * */
void* rflinkLoop(void* args)
{
	set_schedular_info((PS_THREAD_ATTR)args);

	ad9361_init();
	xadcInit();

	while(1)
	{
		ad9361_getTxLoFrequency(&ad9361_tx_channel_val.lo_frequency_tx);

		ad9361_tx1_getHardwareGain(&ad9361_tx_channel_val.hardware_gain_tx1);
		ad9361_tx2_getHardwareGain(&ad9361_tx_channel_val.hardware_gain_tx2);
		ad9361_tx1_getRssi(&ad9361_tx_channel_val.rssi_tx1);
		ad9361_tx2_getRssi(&ad9361_tx_channel_val.rssi_tx2);

		ad9361_tx_getSamplingFrequency(&ad9361_tx_channel_val.sampling_frequency);
		ad9361_tx_getBandwidth(&ad9361_tx_channel_val.rf_bandwidth);

		usleep(100);
	}
}
