/**
 ******************************************************************************
  * @file		: ZED_ad9361.h
  * @brief		: Task scheduler source file
  *				  This file contains task structure of the application
  * @author		: Faruk Sozuer
  * @date		: 20.01.2024
  * @version	: 0.0.1
 ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2024 ZED TECH, All Rights Reserved </center></h2>
  *
  * All information contained herein is, and remains the property of ZED TECH. The
  * intellectual and technical concepts contained herein are proprietary to ZED TECH
  * and are protected by trade secret or copyright law. Dissemination of this
  * information or reproduction of this material is strictly forbidden unless
  * prior written permission is obtained from ZED TECH.  Access to the source code
  * contained herein is hereby forbidden to anyone except current ZED TECH employees,
  * managers or contractors who have executed Confidentiality and Non-disclosure
  * agreements explicitly covering such access.
  *
 ******************************************************************************
  */

#ifndef SRC_ZED_AD9361_H_
#define SRC_ZED_AD9361_H_

#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <time.h>
#include "zed_iio.h"

#define AD9361_NUM_OF_CHANNEL 		11

typedef enum
{
	AD9361_RX1_IN_VOLTAGE0 = 0x00, // RX1
	AD9361_RX2_IN_VOLTAGE1,        // RX2
	AD9361_IN_VOLTAGE2,			   // CORE_VOLTAGE
	AD9361_RX_PATH_IN_VOLTAGE,     // RX PATH
	AD9361_RX_LO_ALTVOLTAGE0,      // RX_LO
	AD9361_TX_LO_ALTVOLTAGE1,      // TX_LO
	AD9361_TX1_OUT_VOLTAGE0,       // TX1
	AD9361_TX2_OUT_VOLTAGE1,       // TX2
	AD9361_TX_PATH_IN_VOLTAGE,     // CORE_VOLTAGE
	AD9361_OUT_VOLTAGE3,
	AD9361_IN_TEMP0,           //TEMPERATURE
	NUM_OF_AD9361_CHANNELS
}ad9361_chhanel_type;

static const iio_channel_configs_t ad9361_iio_ch_cfg[AD9361_NUM_OF_CHANNEL] =
{
      { "voltage0",   IN },  //in_voltage0_
	  { "voltage1",   IN },  //in_voltage1_
	  { "voltage2",   IN },  //in_voltage2_
	  { "voltage0",   IN },  //in_voltage0_
	  { "altvoltage0",OUT},  //out_altvoltage0_
	  { "altvoltage1",OUT},  //out_altvoltage1_
	  { "voltage0",   OUT},  //out_voltage0_
	  { "voltage1",   OUT},  //out_voltage0_
	  { "voltage0",   OUT},
	  { "voltage3",   OUT},  //in_voltage0_
	  { "temp0",   IN },  //in_voltage0_
};

typedef struct
{
	float hardware_gain_rx1;
	float hardware_gain_rx2;
	float rssi_rx1;
	float rssi_rx2;
	float core_voltage; // todo: bu isimden emin ol!!
	int64_t lo_frequency_rx;
	int64_t sampling_frequency;
	int64_t rf_bandwidth;
}ad9361_rx_channel_val_type;

typedef struct
{
	float hardware_gain_tx1;
	float hardware_gain_tx2;
	float rssi_tx1;
	float rssi_tx2;
	int64_t lo_frequency_tx;
	int64_t sampling_frequency;
	int64_t rf_bandwidth;
}ad9361_tx_channel_val_type;


bool ad9361_init(void);

bool ad9361_rx1_getHardwareGain(float *harware_gain);
bool ad9361_rx2_getHardwareGain(float *harware_gain);

bool ad9361_rx1_getRssi(float *rssi);
bool ad9361_rx2_getRssi(float *rssi);

int32_t ad9361_getCoreVoltage(float* voltage); // todo: bu isimden emin ol!!


bool ad9361_rx_getBandwidth(int64_t *bw);
bool ad9361_rx_setBandwidth(int64_t bw);

bool ad9361_rx_getSamplingFrequency(int64_t *sampling_freq);
bool ad9361_rx_setSamplingFrequency(int64_t sampling_freq);

bool ad9361_getRxLoFrequency(int64_t *lo_frequency);
bool ad9361_setRxLoFrequency(int64_t lo_frequency);

bool ad9361_getTxLoFrequency(int64_t *lo_frequency);
bool ad9361_setTxLoFrequency(int64_t lo_frequency);

bool ad9361_tx1_getHardwareGain(float *harware_gain);
bool ad9361_tx2_getHardwareGain(float *harware_gain);

bool ad9361_tx1_getRssi(float *rssi);
bool ad9361_tx2_getRssi(float *rssi);

bool ad9361_tx_getSamplingFrequency(int64_t *sampling_freq);
bool ad9361_rx_setSamplingFrequency(int64_t sampling_freq);

bool ad9361_tx_getBandwidth(int64_t *bw);
bool ad9361_tx_setBandwidth(int64_t bw);

bool ad9361_getTemp(int64_t *temp);

extern ad9361_rx_channel_val_type ad9361_rx_channel_val;
extern ad9361_tx_channel_val_type ad9361_tx_channel_val;


#endif /* SRC_ZED_AD9361_H_ */
